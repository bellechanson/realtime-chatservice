plugins {
	id 'java' // Java 프로젝트로 설정
	id 'org.springframework.boot' version '3.5.0' // Spring Boot 플러그인
	id 'io.spring.dependency-management' version '1.1.7' // 의존성 버전 자동 관리
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // JDK 17 사용 설정
	}
}

repositories {
	mavenCentral() // 중앙 저장소에서 의존성 다운로드
}

dependencies {
	// ✅ 기본 Spring Boot 의존성 (Logging, Core 포함)
	implementation 'org.springframework.boot:spring-boot-starter'

	// ✅ Spring Boot 테스트 관련 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// ✅ 웹 API를 위한 웹 MVC 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// ✅ JPA를 사용한 DB 연동 (Hibernate 기반)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// ✅ 이메일 인증을 위한 JavaMailSender 포함
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// ✅ @Valid, @NotBlank 등 유효성 검증 처리
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ MySQL DB 연결 드라이버
	runtimeOnly 'com.mysql:mysql-connector-j'

	// ✅ 비밀번호 암호화를 위한 BCryptPasswordEncoder 등 포함
	implementation 'org.springframework.security:spring-security-crypto'

	// ✅ 롬복 (빌드 시 제외됨)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ JWT 사용을 위한 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ✅ Redis 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.apache.commons:commons-pool2' // 커넥션 풀
}

tasks.named('test') {
	useJUnitPlatform() // JUnit 5 기반 테스트 사용
}
